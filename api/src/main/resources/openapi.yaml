openapi: 3.0.0
info:
  title: Сервис по генеалогии - OpenAPI спецификация
  description: Сервис позволяет зарегистрированному пользователю создавать генеалогическое древо
  version: 0.0.1
servers:
  - url:  https://localhost:8686/genealogy/swagger-ui/index.html
    description: Dev Server
paths:
  /person/:
    post:
      summary: Метод добавления человека
      description: Метод предназначен для сохранения в БД данных по новому человеку
      tags:
        - Person
      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/BasePerson'
      responses:
        '201':
          description: Подтверждение успешного сохранения человека
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ResponsePerson'
        '400':
          description: Некорректные входные данные. Возвращает список атрибутов с ошибками
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '5XX':
          description: Любая неожиданная ошибка сервера
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
  /person/{id}/:
    get:
     summary: Метод получения карточки человека по идентификатору
     description: Метод предназначен для получения из БД данных по одному человеку.
     tags:
      - Person
     parameters:
      - name: id
        required: true
        in: path
        description: Идентификатор карточки с данными родственника
        example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
        schema:
          type: string
          format: uuid
     responses:
      '200':
        description: Карточка человека
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/PersonWithRelatives'
      '404':
        description: Отсутсвует сущность с данным id
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Error'

      '5XX':
        description: Любая неожиданная ошибка сервера
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Error'
              
    put:
      summary: Метод обновления данныхо человеке
      description: Метод предназначен для обновления в БД данных по имеющейся карточке человека.
      tags:
        - Person
      parameters:
        - name: id
          required: true
          in: path
          description: Идентификатор карточки с данными родственника
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/BasePerson'
      responses:
        '200':
          description: Подтверждение успешного обновления
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ResponsePerson'
        '400':
          description: Некорректные входные данные. Возвращает список атрибутов с ошибками
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '404':
          description: Отсутсвует сущность с данным id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '5XX':
          description: Любая неожиданная ошибка сервера
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
    delete:
     summary: Метод удаления карточки человека
     description: Метод предназначен для удаления в БД данных по карточке человека.
     tags:
      - Person
     parameters:
      - name: id
        required: true
        in: path
        description: Идентификатор карточки родственника
        example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
        schema:
          type: string
          format: uuid
     responses:
      '200':
        description: Успешное удаление
        content: {}
      '404':
        description: Отсутсвует сущность с данным id
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Error'
      '5XX':
        description: Любая неожиданная ошибка сервера
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Error'
          
          
  /person/{id}/parents/:
    post:
      summary: Метод добавления человека в генеалогическое древо
      description: Метод предназначен для добавления в БД человека
      tags:
        - Parents
      parameters:
        - name: id
          required: true
          in: path
          description: Идентификатор карточки человека
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/Parents'
      responses:
        '201':
          description: Подтверждение успешного сохранения
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Parents'
        '404':
          description: Отсутсвует сущность с данным id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '400':
          description: Некорректные входные данные. Возвращает список атрибутов с ошибками
          content:
            application/json;charset=UTF-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '5XX':
          description: Любая неожиданная ошибка сервера
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
                
                
  /person/{id}/parents/{parent_id}/:
    delete:
      summary: Метод удаления связи с человеком
      description: Метод предназначен для удаления связи с предком
      tags:
        - Parents
      parameters:
        - name: id
          required: true
          in: path
          description: Идентификатор карточки родственника
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
        - name: parent_id
          required: true
          in: path
          description: Идентификатор карточки предка
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Успешное удаление
          content: {}
        '404':
          description: Отсутсвует сущность с данным id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '5XX':
          description: Любая неожиданная ошибка сервера
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
    
          
  /person/{id}/ancestors/:
    get:
      summary: Метод получения всего генеалогического древа
      description: Метод предназначен для получения из БД полного древа со всеми предками
      tags:
        - PersonWithAncestors
      parameters:
      - name: id
        required: true
        in: path
        description: Идентификатор карточки с данными родственника
        example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Всё дерево предков
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/PersonWithAncestors'
        '404':
          description: Отсутсвует сущность с данным id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
        '5XX':
          description: Любая неожиданная ошибка сервера
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
      
components:
  schemas:
    BasePerson:
      type: object
      required:
        - firstName
        - gender
      properties:
        firstName:
          type: string
          example: Елена
        surname:
          type: string
          example: Петрова
        gender:
          $ref: '#/components/schemas/Gender'
          example: male
        spouseId:
          type: string
          format: uuid
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          description: Идентификатор супруга/супруги
        maidenName:
          type: string
          example: Смирнова
        birthDate:
          type: string
          format: date
          example: 01.03.1945
        deathDate:  
          type: string
          format: date
          example: 05.03.2019
        bio:
          type: string
          example: Биография моего предка очень интересна
        avatar:
          type: string
          example: https://sartur.sgu.ru/wp-content/uploads/2021/09/avatar1-1536x1536.png
        isAlive:
          type: boolean
          example: true

    ResponsePerson:
      allOf:
        - $ref: '#/components/schemas/BasePerson'
        - type: object
          properties:
            id:
              type: string
              format: uuid
              example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
              description: Идентификатор карточки родственника

    PersonWithAncestors:
      allOf:
        - $ref: '#/components/schemas/ResponsePerson'
        - type: object
          required:
            - treeOwner
            - parents
          properties:
            treeOwner:
              type: boolean
              example: true
            parents:
              type: array
              items:
                $ref: '#/components/schemas/PersonWithAncestors'
      example:
        id: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
        firstName: Елена
        surname: Петрова
        gender: male
        spouseId: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
        maidenName: Смирнова
        birthDate: '2024-01-23'
        deathDate: '2024-01-23'
        bio: Биография моего предка очень интересна
        avatar: https://sartur.sgu.ru/wp-content/uploads/2021/09/avatar1-1536x1536.png
        treeOwner: true
        parents:
          - id: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
            firstName: Елена
            surname: Петрова
            gender: female
            spouseId: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
            maidenName: Смирнова
            birthDate: '2024-01-23'
            deathDate: '2024-01-23'
            bio: Биография моего предка очень интересна
            avatar: https://sartur.sgu.ru/wp-content/uploads/2021/09/avatar1-1536x1536.png
            treeOwner: false
            parents: []
          - id: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b5
            firstName: Иван
            surname: Петров
            gender: male
            spouseId: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
            maidenName: Смирнова
            birthDate: '2024-01-23'
            deathDate: '2024-01-23'
            bio: Биография моего предка очень интересна
            avatar: https://sartur.sgu.ru/wp-content/uploads/2021/09/avatar1-1536x1537.png
            treeOwner: false
            parents: []

    PersonWithRelatives:
      type: object
      allOf:
        - $ref: '#/components/schemas/ResponsePerson'
        - type: object
          properties:
            parents:
              type: array
              items:
                $ref: '#/components/schemas/Relative'
            children:
              type: array
              items:
                $ref: '#/components/schemas/Relative'
            spouse:
              $ref: '#/components/schemas/Relative'
    
    Parents:
      type: object
      required:
        - parentType
        - parent_id
      properties:
        id:
          type: string
          format: uuid
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
          description: Идентификатор карточки родителя
        parentType:
          $ref: '#/components/schemas/ParentType'
          example: mother

    Relative:
      type: object
      required:
        - id
        - gender
        - firstname
      properties:
        id:
          type: string
          format: uuid
          example: 42abcd2b-8b9c-4af9-88f7-0bc180cf74b4
        firstName:
          type: string
          example: Елена
        surname:
          type: string
          example: Петрова
        gender:
          $ref: '#/components/schemas/Gender'


    Gender:
      description: пол человека
      type: string
      enum:
        - male
        - female
      example: male
      
        
    ParentType:
      description: тип родителя
      type: string
      enum:
        - mother
        - father
      example: mother

    Error:
      type: object
      required:
        - title
        - detail
      properties:
        title:
          description: Краткое описание проблемы, понятное человеку
          type: string
          example: Entity not found
        detail:
          description: Описание конкретно возникшей ошибки, понятное человеку
          type: string
          example: Entity [Post] with id = [123456] not found. You MUST use POST to add entity instead of PUT
            
        errorCode:
          description: Код ошибки по бизнес логике приложения
          type: integer
          format: int32
          example: 57
            
        exception:
          description: Тип ошибки
          type: string
          example: NullPointerException
        stacktrace:
          description: Stacktrace в случае возникновения на сервере исключения
          type: string
          example: ...