/*
 * This file is generated by jOOQ.
 */
package com.example.genealogyback.jooq.tables.records;


import com.example.genealogyback.dto.GenderDto;
import com.example.genealogyback.jooq.tables.Persons;

import java.time.LocalDate;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Информация о людях.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PersonsRecord extends UpdatableRecordImpl<PersonsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.persons.id</code>. Идентификатор человека
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.persons.id</code>. Идентификатор человека
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.persons.first_name</code>. Имя
     */
    public void setFirstName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.persons.first_name</code>. Имя
     */
    public String getFirstName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.persons.surname</code>.
     */
    public void setSurname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.persons.surname</code>.
     */
    public String getSurname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.persons.gender</code>. Пол
     */
    public void setGender(GenderDto value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.persons.gender</code>. Пол
     */
    public GenderDto getGender() {
        return (GenderDto) get(3);
    }

    /**
     * Setter for <code>public.persons.birth_date</code>. Дата рождения
     */
    public void setBirthDate(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.persons.birth_date</code>. Дата рождения
     */
    public LocalDate getBirthDate() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>public.persons.spouse_id</code>. Идентификатор супруга
     */
    public void setSpouseId(UUID value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.persons.spouse_id</code>. Идентификатор супруга
     */
    public UUID getSpouseId() {
        return (UUID) get(5);
    }

    /**
     * Setter for <code>public.persons.maiden_name</code>. Девичья фамилия
     */
    public void setMaidenName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.persons.maiden_name</code>. Девичья фамилия
     */
    public String getMaidenName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.persons.death_date</code>. Дата смерти
     */
    public void setDeathDate(LocalDate value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.persons.death_date</code>. Дата смерти
     */
    public LocalDate getDeathDate() {
        return (LocalDate) get(7);
    }

    /**
     * Setter for <code>public.persons.bio</code>. Биография
     */
    public void setBio(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.persons.bio</code>. Биография
     */
    public String getBio() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.persons.avatar</code>. Ссылка на фотографию
     */
    public void setAvatar(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.persons.avatar</code>. Ссылка на фотографию
     */
    public String getAvatar() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonsRecord
     */
    public PersonsRecord() {
        super(Persons.PERSONS);
    }

    /**
     * Create a detached, initialised PersonsRecord
     */
    public PersonsRecord(UUID id, String firstName, String surname, GenderDto gender, LocalDate birthDate, UUID spouseId, String maidenName, LocalDate deathDate, String bio, String avatar) {
        super(Persons.PERSONS);

        setId(id);
        setFirstName(firstName);
        setSurname(surname);
        setGender(gender);
        setBirthDate(birthDate);
        setSpouseId(spouseId);
        setMaidenName(maidenName);
        setDeathDate(deathDate);
        setBio(bio);
        setAvatar(avatar);
        resetChangedOnNotNull();
    }
}
