/*
 * This file is generated by jOOQ.
 */
package com.example.genealogyback.jooq.tables.daos;


import com.example.genealogyback.dto.GenderDto;
import com.example.genealogyback.jooq.tables.Persons;
import com.example.genealogyback.jooq.tables.records.PersonsRecord;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.impl.EnumConverter;


/**
 * Информация о людях.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PersonsDao extends DAOImpl<PersonsRecord, com.example.genealogyback.jooq.tables.pojos.Persons, UUID> {

    /**
     * Create a new PersonsDao without any configuration
     */
    public PersonsDao() {
        super(Persons.PERSONS, com.example.genealogyback.jooq.tables.pojos.Persons.class);
    }

    /**
     * Create a new PersonsDao with an attached configuration
     */
    public PersonsDao(Configuration configuration) {
        super(Persons.PERSONS, com.example.genealogyback.jooq.tables.pojos.Persons.class, configuration);
    }

    @Override
    public UUID getId(com.example.genealogyback.jooq.tables.pojos.Persons object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Persons.PERSONS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchById(UUID... values) {
        return fetch(Persons.PERSONS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.genealogyback.jooq.tables.pojos.Persons fetchOneById(UUID value) {
        return fetchOne(Persons.PERSONS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.genealogyback.jooq.tables.pojos.Persons> fetchOptionalById(UUID value) {
        return fetchOptional(Persons.PERSONS.ID, value);
    }

    /**
     * Fetch records that have <code>first_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchRangeOfFirstName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.FIRST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchByFirstName(String... values) {
        return fetch(Persons.PERSONS.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>surname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchRangeOfSurname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.SURNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>surname IN (values)</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchBySurname(String... values) {
        return fetch(Persons.PERSONS.SURNAME, values);
    }

    /**
     * Fetch records that have <code>gender BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchRangeOfGender(GenderDto lowerInclusive, GenderDto upperInclusive) {
        return fetchRange(Persons.PERSONS.GENDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>gender IN (values)</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchByGender(GenderDto... values) {
        return fetch(Persons.PERSONS.GENDER, values);
    }

    /**
     * Fetch records that have <code>birth_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchRangeOfBirthDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Persons.PERSONS.BIRTH_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>birth_date IN (values)</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchByBirthDate(LocalDate... values) {
        return fetch(Persons.PERSONS.BIRTH_DATE, values);
    }

    /**
     * Fetch records that have <code>spouse_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchRangeOfSpouseId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Persons.PERSONS.SPOUSE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>spouse_id IN (values)</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchBySpouseId(UUID... values) {
        return fetch(Persons.PERSONS.SPOUSE_ID, values);
    }

    /**
     * Fetch records that have <code>maiden_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchRangeOfMaidenName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.MAIDEN_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>maiden_name IN (values)</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchByMaidenName(String... values) {
        return fetch(Persons.PERSONS.MAIDEN_NAME, values);
    }

    /**
     * Fetch records that have <code>death_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchRangeOfDeathDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Persons.PERSONS.DEATH_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>death_date IN (values)</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchByDeathDate(LocalDate... values) {
        return fetch(Persons.PERSONS.DEATH_DATE, values);
    }

    /**
     * Fetch records that have <code>bio BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchRangeOfBio(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.BIO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bio IN (values)</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchByBio(String... values) {
        return fetch(Persons.PERSONS.BIO, values);
    }

    /**
     * Fetch records that have <code>avatar BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchRangeOfAvatar(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.AVATAR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>avatar IN (values)</code>
     */
    public List<com.example.genealogyback.jooq.tables.pojos.Persons> fetchByAvatar(String... values) {
        return fetch(Persons.PERSONS.AVATAR, values);
    }
}
