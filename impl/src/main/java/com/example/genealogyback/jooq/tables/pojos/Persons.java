/*
 * This file is generated by jOOQ.
 */
package com.example.genealogyback.jooq.tables.pojos;


import com.example.genealogyback.dto.GenderDto;

import java.io.Serializable;
import java.time.LocalDate;
import java.util.UUID;


/**
 * Информация о людях.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Persons implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private String firstName;
    private String surname;
    private GenderDto gender;
    private LocalDate birthDate;
    private UUID spouseId;
    private String maidenName;
    private LocalDate deathDate;
    private String bio;
    private String avatar;

    public Persons() {}

    public Persons(Persons value) {
        this.id = value.id;
        this.firstName = value.firstName;
        this.surname = value.surname;
        this.gender = value.gender;
        this.birthDate = value.birthDate;
        this.spouseId = value.spouseId;
        this.maidenName = value.maidenName;
        this.deathDate = value.deathDate;
        this.bio = value.bio;
        this.avatar = value.avatar;
    }

    public Persons(
        UUID id,
        String firstName,
        String surname,
        GenderDto gender,
        LocalDate birthDate,
        UUID spouseId,
        String maidenName,
        LocalDate deathDate,
        String bio,
        String avatar
    ) {
        this.id = id;
        this.firstName = firstName;
        this.surname = surname;
        this.gender = gender;
        this.birthDate = birthDate;
        this.spouseId = spouseId;
        this.maidenName = maidenName;
        this.deathDate = deathDate;
        this.bio = bio;
        this.avatar = avatar;
    }

    /**
     * Getter for <code>public.persons.id</code>. Идентификатор человека
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.persons.id</code>. Идентификатор человека
     */
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.persons.first_name</code>. Имя
     */
    public String getFirstName() {
        return this.firstName;
    }

    /**
     * Setter for <code>public.persons.first_name</code>. Имя
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Getter for <code>public.persons.surname</code>.
     */
    public String getSurname() {
        return this.surname;
    }

    /**
     * Setter for <code>public.persons.surname</code>.
     */
    public void setSurname(String surname) {
        this.surname = surname;
    }

    /**
     * Getter for <code>public.persons.gender</code>. Пол
     */
    public GenderDto getGender() {
        return this.gender;
    }

    /**
     * Setter for <code>public.persons.gender</code>. Пол
     */
    public void setGender(GenderDto gender) {
        this.gender = gender;
    }

    /**
     * Getter for <code>public.persons.birth_date</code>. Дата рождения
     */
    public LocalDate getBirthDate() {
        return this.birthDate;
    }

    /**
     * Setter for <code>public.persons.birth_date</code>. Дата рождения
     */
    public void setBirthDate(LocalDate birthDate) {
        this.birthDate = birthDate;
    }

    /**
     * Getter for <code>public.persons.spouse_id</code>. Идентификатор супруга
     */
    public UUID getSpouseId() {
        return this.spouseId;
    }

    /**
     * Setter for <code>public.persons.spouse_id</code>. Идентификатор супруга
     */
    public void setSpouseId(UUID spouseId) {
        this.spouseId = spouseId;
    }

    /**
     * Getter for <code>public.persons.maiden_name</code>. Девичья фамилия
     */
    public String getMaidenName() {
        return this.maidenName;
    }

    /**
     * Setter for <code>public.persons.maiden_name</code>. Девичья фамилия
     */
    public void setMaidenName(String maidenName) {
        this.maidenName = maidenName;
    }

    /**
     * Getter for <code>public.persons.death_date</code>. Дата смерти
     */
    public LocalDate getDeathDate() {
        return this.deathDate;
    }

    /**
     * Setter for <code>public.persons.death_date</code>. Дата смерти
     */
    public void setDeathDate(LocalDate deathDate) {
        this.deathDate = deathDate;
    }

    /**
     * Getter for <code>public.persons.bio</code>. Биография
     */
    public String getBio() {
        return this.bio;
    }

    /**
     * Setter for <code>public.persons.bio</code>. Биография
     */
    public void setBio(String bio) {
        this.bio = bio;
    }

    /**
     * Getter for <code>public.persons.avatar</code>. Ссылка на фотографию
     */
    public String getAvatar() {
        return this.avatar;
    }

    /**
     * Setter for <code>public.persons.avatar</code>. Ссылка на фотографию
     */
    public void setAvatar(String avatar) {
        this.avatar = avatar;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Persons other = (Persons) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.firstName == null) {
            if (other.firstName != null)
                return false;
        }
        else if (!this.firstName.equals(other.firstName))
            return false;
        if (this.surname == null) {
            if (other.surname != null)
                return false;
        }
        else if (!this.surname.equals(other.surname))
            return false;
        if (this.gender == null) {
            if (other.gender != null)
                return false;
        }
        else if (!this.gender.equals(other.gender))
            return false;
        if (this.birthDate == null) {
            if (other.birthDate != null)
                return false;
        }
        else if (!this.birthDate.equals(other.birthDate))
            return false;
        if (this.spouseId == null) {
            if (other.spouseId != null)
                return false;
        }
        else if (!this.spouseId.equals(other.spouseId))
            return false;
        if (this.maidenName == null) {
            if (other.maidenName != null)
                return false;
        }
        else if (!this.maidenName.equals(other.maidenName))
            return false;
        if (this.deathDate == null) {
            if (other.deathDate != null)
                return false;
        }
        else if (!this.deathDate.equals(other.deathDate))
            return false;
        if (this.bio == null) {
            if (other.bio != null)
                return false;
        }
        else if (!this.bio.equals(other.bio))
            return false;
        if (this.avatar == null) {
            if (other.avatar != null)
                return false;
        }
        else if (!this.avatar.equals(other.avatar))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.firstName == null) ? 0 : this.firstName.hashCode());
        result = prime * result + ((this.surname == null) ? 0 : this.surname.hashCode());
        result = prime * result + ((this.gender == null) ? 0 : this.gender.hashCode());
        result = prime * result + ((this.birthDate == null) ? 0 : this.birthDate.hashCode());
        result = prime * result + ((this.spouseId == null) ? 0 : this.spouseId.hashCode());
        result = prime * result + ((this.maidenName == null) ? 0 : this.maidenName.hashCode());
        result = prime * result + ((this.deathDate == null) ? 0 : this.deathDate.hashCode());
        result = prime * result + ((this.bio == null) ? 0 : this.bio.hashCode());
        result = prime * result + ((this.avatar == null) ? 0 : this.avatar.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Persons (");

        sb.append(id);
        sb.append(", ").append(firstName);
        sb.append(", ").append(surname);
        sb.append(", ").append(gender);
        sb.append(", ").append(birthDate);
        sb.append(", ").append(spouseId);
        sb.append(", ").append(maidenName);
        sb.append(", ").append(deathDate);
        sb.append(", ").append(bio);
        sb.append(", ").append(avatar);

        sb.append(")");
        return sb.toString();
    }
}
