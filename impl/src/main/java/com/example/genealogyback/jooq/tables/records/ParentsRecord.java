/*
 * This file is generated by jOOQ.
 */
package com.example.genealogyback.jooq.tables.records;


import com.example.genealogyback.dto.ParentTypeDto;
import com.example.genealogyback.jooq.tables.Parents;

import java.util.UUID;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ParentsRecord extends TableRecordImpl<ParentsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.parents.child_id</code>. Идентификатор ребенка
     */
    public void setChildId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.parents.child_id</code>. Идентификатор ребенка
     */
    public UUID getChildId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.parents.parent_id</code>. Идентификатор родителя
     */
    public void setParentId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.parents.parent_id</code>. Идентификатор родителя
     */
    public UUID getParentId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.parents.parent_type</code>. Отец или мать
     */
    public void setParentType(ParentTypeDto value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.parents.parent_type</code>. Отец или мать
     */
    public ParentTypeDto getParentType() {
        return (ParentTypeDto) get(2);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ParentsRecord
     */
    public ParentsRecord() {
        super(Parents.PARENTS);
    }

    /**
     * Create a detached, initialised ParentsRecord
     */
    public ParentsRecord(UUID childId, UUID parentId, ParentTypeDto parentType) {
        super(Parents.PARENTS);

        setChildId(childId);
        setParentId(parentId);
        setParentType(parentType);
        resetChangedOnNotNull();
    }
}
